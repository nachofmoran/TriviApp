stages:
  - sonarcloud
  - deploy
  - hosting

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
  GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
sonarcloud-check:
  stage: sonarcloud
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner

deploy:
  stage: deploy
  image: docker:20.10.14-alpine3.15
  # dependencies:
  #   - build
  services:
    - docker:dind
  before_script:
    - 'PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: ''{ print $2 }'' | sed ''s/[",]//g'' | tr -d ''[[:space:]]'')'
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
  script:
    - docker build -t $DOCKER_HUB_USER/$CI_PROJECT_NAME:$PACKAGE_VERSION .
    - docker push $DOCKER_HUB_USER/$CI_PROJECT_NAME:$PACKAGE_VERSION

  hosting:
    stage: hosting
    image: node:18.16-alpine3.16
    script:
      - npm install -g firebase-tools
      - firebase deploy --token "$FIREBASE_TOKEN"
